# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest 


# Note: github_pat should be configured as an environment variable in devops
#   -> create github pat here: https://github.com/settings/tokens
#   -> Create environment variable in dev.azure.com under pipelines -> edit (right top) -> variables (right top triple dots) -> called github_pat -> click the lock
variables:
  gh_user: oplancelot
  gh_repo: oplancelot.github.io
  gh_pass: $(github_pat)
  gh_email: oplancelot@gmail.com
  gh_auth_header: $(echo -n "${gh_user}:$(github_pat)" | base64);



steps:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azdevops&tabs=schema#checkout
- checkout: none # we are not going to sync sources, we will manually clone
  persistCredentials: false # We disallow setting the persisting, since we want to have a verified push which requires a PAT token

# # 1. Setup our local repository and branch that we can work on
# - script: git clone https://$(github_pat)@github.com/$(gh_user)/$(gh_repo).git .
#   workingDirectory: $(Build.StagingDirectory)
#   displayName: "[Git] Clone GitHub Pages Repository"


- script: git remote add github  https://$(github_pat)@github.com/$(gh_user)/$(gh_repo).git 
  workingDirectory: $(Build.StagingDirectory)
  displayName: "[Git] Clone GitHub Pages Repository"

- script: |
    git config user.email $(gh_email)
    git config user.name $(gh_user)
  workingDirectory: $(Build.StagingDirectory)
  displayName: '[Git] Configure User'

- script: |
    ls -la;
  workingDirectory: $(Build.StagingDirectory)
  displayName: '[Jekyll] ls'

# 2. add/update tag
# default dir $(System.DefaultWorkingDirectory) 
- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: '$(Build.StagingDirectory)/_tag_generator.py'


# 3. Create our commit, merge into master, delete draft branch and push it
- script: |
    git add --all;
    git commit -m "Pipelines-Bot: Updated site via $(Build.SourceVersion)";
  workingDirectory: $(Build.StagingDirectory)
  displayName: '[Git] Creating commit'

- script: |
    git push github main;
  workingDirectory: $(Build.StagingDirectory)
  displayName: '[Git] Push changes to remote'

# 4. Get GitHub Pages build status

- script: |
    curl https://api.github.com/repos/$(gh_user)/$(gh_repo)/pages/builds/latest -i -v \
    -X GET \
    -H "Accept: application/vnd.github.mister-fantastic-preview+json" \
    -H "Authorization: Basic $(gh_auth_header)"
  displayName: '[GitHub] Get Page Build Status'

